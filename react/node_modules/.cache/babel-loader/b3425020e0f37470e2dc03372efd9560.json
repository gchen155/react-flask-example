{"ast":null,"code":"var _jsxFileName = \"/Users/gracechen/Documents/College/FA 2021/CS 196/example/ex/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\"; // Test extends React.Component which gives Test access to React and its functions\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  // this constructor initializes values, it operates like in any language you've learned before.\n  // I've initialized the state here but the state could also be empty.\n  // the state stores properties related to Test\n  // keep the 'props' statements: they are parameters from react\n  constructor(props) {\n    super(props);\n\n    this.changeVal = () => {\n      // api to get the flask function that returns a string\n      axios.get(`http://127.0.0.1:5000/first`).then(res => {\n        this.setState({\n          val: res.data\n        });\n      });\n    };\n\n    this.state = {\n      val: \"my\"\n    };\n  } // this is a function that sets val in state\n\n\n  // this is where my html code lives and is generated with this Test react component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"This is \", this.state.val, \" website\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: this.changeVal,\n        children: \"Change owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n} // this \"exports\" the component so it displays on your localhost\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/gracechen/Documents/College/FA 2021/CS 196/example/ex/src/index.js"],"names":["React","ReactDOM","axios","Test","Component","constructor","props","changeVal","get","then","res","setState","val","data","state","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjC;AACA;AACA;AACA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,SALmB,GAKP,MAAM;AAChB;AACAL,MAAAA,KAAK,CAACM,GAAN,CAAW,6BAAX,EAAyCC,IAAzC,CAA+CC,GAAD,IAAS;AACrD,aAAKC,QAAL,CAAc;AAAEC,UAAAA,GAAG,EAAEF,GAAG,CAACG;AAAX,SAAd;AACD,OAFD;AAGD,KAVkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEF,MAAAA,GAAG,EAAE;AAAP,KAAb;AACD,GARgC,CASjC;;;AAQA;AACAG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,+BAAa,KAAKD,KAAL,CAAWF,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKL,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA3BgC,C,CA8BnC;;;AACAN,QAAQ,CAACc,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\n// Test extends React.Component which gives Test access to React and its functions\nclass Test extends React.Component {\n  // this constructor initializes values, it operates like in any language you've learned before.\n  // I've initialized the state here but the state could also be empty.\n  // the state stores properties related to Test\n  // keep the 'props' statements: they are parameters from react\n  constructor(props) {\n    super(props);\n    this.state = { val: \"my\" };\n  }\n  // this is a function that sets val in state\n  changeVal = () => {\n    // api to get the flask function that returns a string\n    axios.get(`http://127.0.0.1:5000/first`).then((res) => {\n      this.setState({ val: res.data });\n    });\n  };\n\n  // this is where my html code lives and is generated with this Test react component\n  render() {\n    return (\n      <div>\n        <h1>This is {this.state.val} website</h1>\n        <button className=\"button\" onClick={this.changeVal}>\n          Change owner\n        </button>\n      </div>\n    );\n  }\n}\n\n// this \"exports\" the component so it displays on your localhost\nReactDOM.render(<Test />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}